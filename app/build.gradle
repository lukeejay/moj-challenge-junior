/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/6.8.3/userguide/building_java_projects.html
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
}

repositories {
    // Use JCenter for resolving dependencies.
    jcenter()
}

dependencies {
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.5.2'
	testImplementation 'org.junit.jupiter:junit-jupiter-params:5.5.2'
	testImplementation group: 'org.junit.platform', name: 'junit-platform-engine', version: '1.6.2'
	testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.5.2'
		
	def mockitoVersion = '3.7.7'
    testImplementation group: 'org.mockito', name: 'mockito-junit-jupiter', version: mockitoVersion
    testImplementation group: 'org.mockito', name: 'mockito-inline', version: mockitoVersion	

   	testImplementation 'org.hamcrest:hamcrest-all:1.3'
   	
   	testImplementation group: 'nl.jqno.equalsverifier', name: 'equalsverifier', version: '3.1.9'

    // This dependency is used by the application.
    implementation 'com.google.guava:guava:29.0-jre'
}

application {
    // Define the main class for the application.
    mainClass = 'moj.lukeejay.challenge.Checkout'
}

tasks.named('test') {
    // Use junit platform for unit tests.
    useJUnitPlatform()
}
